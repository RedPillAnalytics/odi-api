version: '1.0'
steps:
    main_clone:
      title: Cloning main repository...
      type: git-clone
      repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
      revision: '${{CF_REVISION}}'

    gradle_image:
      title: Build Gradle Image
      type: build
      image_name: gradle

    odi_images:
      title: Build ODI Images
      type: parallel
      steps:

        image_122130:
          title: Build 12.2.1.3.0 Image
          type: build
          image_name: odi
          tag: 12.2.1.3.0
          working_directory: odi/12.2.1.3.0

        image_122131:
          title: Build 12.2.1.3.1 Image
          type: build
          image_name: odi
          tag: 12.2.1.3.1
          working_directory: odi/12.2.1.3.1

        image_122132:
          title: Build 12.2.1.3.2 Image
          type: build
          image_name: odi
          tag: 12.2.1.3.2
          working_directory: odi/12.2.1.3.2

    inspect_sdk:
      title: Inspect ODI SDK
      image: ${{odi_image}}
      commands:
        - ls -lh odi-sdk

    release_plugin:
      title: Release Plugin
      image: ${{gradle_image}}
      cmd:
        - cleanLibs
        - release
        - -Prelease.disableChecks
        - -Prelease.localOnly
      when:
        condition:
          all:
            validateTargetBranch: '"${{CF_PULL_REQUEST_TARGET}}" == "master"'
            prActionClose: '"${{CF_PULL_REQUEST_ACTION}}" == "closed"'
            prActionMerge: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'
    
    build_plugin:
      title: Build Plugin
      image: ${{gradle_image}}
      cmd:
        - release
        - -Prelease.disableChecks
        - -Prelease.localOnly
        - -Prelease.dryRun
        - build
        - copyBuildResources

    inspect_plugin:
      title: Inspect Plugin
      image: ${{odi_image}}
      commands:
        - ls -lh build/libs

    publish_plugin:
      title: Publish Plugin
      image: ${{gradle_image}}
      cmd:
        - publishVersionDocs
        - publishLatestDocs
        - githubRelease
        - publishPlugins
        - -Si
      when:
        condition:
          all:
            validateTargetBranch: '"${{CF_PULL_REQUEST_TARGET}}" == "master"'
            prActionClose: '"${{CF_PULL_REQUEST_ACTION}}" == "closed"'
            prActionMerge: '"${{CF_PULL_REQUEST_MERGED}}" == "true"'

    analytics_producer:
      title: Analytics Producer
      image: ${{gradle_image}}
      cmd:
        - producer
