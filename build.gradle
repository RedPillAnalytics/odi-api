import com.redpillanalytics.aws.tasks.S3UploadSyncTask
import com.redpillanalytics.aws.tasks.S3DownloadSyncTask

plugins {
   id "com.gradle.plugin-publish" version "0.10.1"
   id "pl.allegro.tech.build.axion-release" version "1.10.1"
   id "com.github.breadmoirai.github-release" version "2.2.8"
   id 'groovy'
   id 'java-gradle-plugin'
   id "com.github.johnrengelman.shadow" version "5.0.0"
   id "com.github.ben-manes.versions" version "0.21.0"
   id 'com.adarshr.test-logger' version '1.6.0'
   id "com.redpillanalytics.gradle-analytics" version "1.2.3"
   id "com.redpillanalytics.gradle-aws" version "0.1.2"
}

// send analytics
analytics {
   organization = 'Red Pill Analytics'
   sinks {
      pubsub
      s3 {
         prefix = 'rpa-gradle-analytics'
      }
   }
}

scmVersion {
   tag {
      prefix = 'v'
      versionSeparator = ''
   }
   ignoreUncommittedChanges = true
}

//set Gradle version to SCM Version
allprojects {
   project.version = scmVersion.version
}

// Default artifact naming.
group = 'com.redpillanalytics'
ext.pluginName = 'checkmate.odi-api'

// Build ODI container
ext.odiVersion = '12.2.1.3.0'
ext.odiSdkHome = "odi-sdk"

gradlePlugin {
   plugins {
      odiApi {
         id = "com.redpillanalytics.${pluginName}"
         implementationClass = 'com.redpillanalytics.odi.api.OdiApiPlugin'
      }
   }
}

pluginBundle {
   description = "An API used by other Red Pill Analytics plugins for working with ODI."
   website = "https://github.com/RedPillAnalytics/${rootProject.name}/"
   vcsUrl = "https://github.com/RedPillAnalytics/${rootProject.name}/"

   plugins {
      odiApi {
         displayName = pluginName
         tags = ['oracle', 'data-integration', 'etl', 'sdk']
         version = project.version
      }
   }
}

githubRelease {
   token = githubToken
   owner = 'RedPillAnalytics'
   repo = rootProject.name
   tagName = "v${version}"
   releaseAssets = fileTree(dir: buildDir, includes: ["**/*${version}*", "**/*${version}*.jar"]).toList()
}

dependencies {
   compile gradleApi()
   compile localGroovy()
   compile group: 'org.slf4j', name: 'slf4j-simple', version: '+'

   // needed for imports above
   compile "gradle.plugin.com.redpillanalytics:gradle-aws:+"

   // ODI JAR files copied from Docker container
   compile fileTree(dir: "$odiSdkHome/$odiVersion", include: '*.jar')
}

repositories {
   jcenter()
}

//customize ShadowJar
jar.enabled = false
shadowJar {
  classifier = null
  zip64 = true
}
tasks.build.dependsOn tasks.shadowJar

task('cleanJunit', type: Delete) {
   delete getTestResultsDir()
}

task('cleanLibs', type: Delete) {
   delete getLibsDir()
}

ext.docsBucket = 'documentation.redpillanalytics.com'
ext.resourceBucket = 'rpa-build-resources'

task publishVersionDocs(type: S3UploadSyncTask) {
   description = 'Upload version Groovydocs to s3.'
   group = 'documentation'
   bucketName docsBucket
   filePath groovydoc.destinationDir.getPath()
   keyName "${rootProject.name}/${version}"
   dependsOn groovydoc
}

task publishLatestDocs(type: S3UploadSyncTask) {
   description = 'Upload latest Groovydocs to s3.'
   group = 'documentation'
   bucketName docsBucket
   filePath groovydoc.destinationDir.getPath()
   keyName "${rootProject.name}/latest"
   dependsOn groovydoc
}

task copyBuildResources(type: S3DownloadSyncTask) {
   description 'Copy build resource files from S3.'
   group 'build'
   bucketName resourceBucket
   keyName 'gradle'
}

